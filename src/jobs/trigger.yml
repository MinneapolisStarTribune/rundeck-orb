description: This job will fire a basic unparameterized request to your Rundeck API to trigger a job.

parameters:
  jobid:
    description: The unique identifier for the job to trigger.
    type: string
  baseurl:
    description: The base URL of your Rundeck API. This should not end in a slash.
    type: string
    default: "https://rundeck.example.org/api"
  authtoken:
    description: The API token generated by Rundeck.
    type: string
    default: "abcdef01-2345-6789-abcd-ef0123456789"

docker:
  - image: cimg/base:stable
resource_class: small

steps:
  - run:
      name: Trigger Rundeck
      environment:
        AUTHTKN: <<parameters.authtoken>>
        BASEURL: <<parameters.baseurl>>
      command: |
        APIOUT=$(mktemp)
        STATUSOUT=$(mktemp)
        if [[ "${AUTHTKN}" == "abcdef01-2345-6789-abcd-ef0123456789" ]]
        then
          if [[ "${RUNDECK_AUTH_TOKEN}x" == "x" ]]
          then
            echo "Rundeck authentication token not provided, and not present in environment."
            exit 1
          else
            echo "Using Rundeck authentication token from environment."
            AUTHTKN="${RUNDECK_AUTH_TOKEN}"
          fi
        fi
        if [[ "${BASEURL}" == "https://rundeck.example.org/api" ]]
        then
          if [[ "${RUNDECK_BASE_URL}x" == "x" ]]
          then
            echo "Rundeck base URL not provided, and not present in environment."
            exit 1
          else
            echo "Using Rundeck base URL from environment."
            BASEURL="${RUNDECK_BASE_URL}"
          fi
        fi
        curl -LSsg \
          --header 'Accept: application/yaml' \
          --header "X-Rundeck-Auth-Token: ${AUTHTKN}" \
          "${BASEURL}/18/job/<<parameters.jobid>>" \
          | yq e '.[].options[].name' - > options

        echo -n "curl -LSsg -X POST -o ${APIOUT} -w '%{http_code}\n'" > command
        echo -n " --header 'Accept: application/json'" >> command
        echo -n " --header \"X-Rundeck-Auth-Token: ${AUTHTKN}\"" >> command
        for O in `cat options` ; do case $O in
          cibranch)    echo " --data-urlencode \"option.$O=${CIRCLE_BRANCH}\"" ;;
          cibuildnum)  echo " --data-urlencode \"option.$O=${CIRCLE_BUILDNUM}\"" ;;
          cicommit)    echo " --data-urlencode \"option.$O=${CIRCLE_SHA1}\"" ;;
          cireponame)  echo " --data-urlencode \"option.$O=${CIRCLE_PROJECT_REPONAME}\"" ;;
          cirepoowner) echo " --data-urlencode \"option.$O=${CIRCLE_PROJECT_USERNAME}\"" ;;
          cirepourl)   echo " --data-urlencode \"option.$O=${CIRCLE_REPOSITORY_URL}\"" ;;
          ciprurl)     echo " --data-urlencode \"option.$O=${CIRCLE_PULL_REQUEST}\"" ;;
          citag)       echo " --data-urlencode \"option.$O=${CIRCLE_TAG}\"" ;;
          ciuser)      echo " --data-urlencode \"option.$O=${CIRCLE_USERNAME}\"" ;;
        esac ; done >> command
        echo " ${BASEURL}/18/job/<<parameters.jobid>>/run" >> command
        sh command > ${STATUSOUT}
        if (( $(cat ${STATUSOUT}) > 399 ))
        then
          echo "Request failed with status $(cat ${STATUSOUT})"
          jq . ${APIOUT}
          exit 1
        fi
        JOBURL="$(jq -r .permalink ${APIOUT})"
        echo "Rundeck job is $(jq -r '.status // "unknown"' ${APIOUT})"
        if [[ "$JOBURLx" == "x" ]]
        then
          echo "No job link available"
        else
          echo "View job: ${JOBURL}"
        fi
