description: This job will fire a basic unparameterized request to your Rundeck API to trigger a job.

parameters:
  baseurl:
    description: The base URL of your Rundeck API. This should not end in a slash.
    type: string
    default: "https://rundeck.your.org/api"
  jobid:
    description: The unique identifier for the job to trigger.
    type: string
    default: "abcdef01-2345-6789-abcd-ef0123456789"
  authtoken:
    description: The API token generated by Rundeck.
    type: string
    default: "abcdef01-2345-6789-abcd-ef0123456789"

docker:
  - image: cimg/base:stable
resource_class: small

steps:
  - run:
      name: Trigger Rundeck
      command: |
        APIOUT=$(mktemp)
        STATUSOUT=$(mktemp)
        curl -LSg -X POST -o ${APIOUT} -w '%{http_code}\n' \
          --header 'Accept: application/json' \
          --header 'X-Rundeck-Auth-Token: <<parameters.authtoken>>' \
          --data-urlencode "option.cibranch=${CIRCLE_BRANCH}" \
          --data-urlencode "option.cibuildnum=${CIRCLE_BUILDNUM}" \
          --data-urlencode "option.cicommit=${CIRCLE_SHA1}" \
          --data-urlencode "option.cireponame=${CIRCLE_PROJECT_REPONAME}" \
          --data-urlencode "option.cirepoowner=${CIRCLE_PROJECT_USERNAME}" \
          --data-urlencode "option.cirepourl=${CIRCLE_REPOSITORY_URL}" \
          --data-urlencode "option.ciprurl=${CIRCLE_PULL_REQUEST}" \
          --data-urlencode "option.citag=${CIRCLE_TAG}" \
          --data-urlencode "option.ciuser=${CIRCLE_USERNAME}" \
          '<<parameters.baseurl>>/18/job/<<parameters.jobid>>/run' \
          > ${STATUSOUT}
        if (( $(cat ${STATUSOUT}) > 399 ))
        then
          echo "Request failed with status $(cat ${STATUSOUT})"
          jq . ${APIOUT}
          exit 1
        fi
        JOBSTATUS=$(jq -r '.status // "unknown"' ${APIOUT})
        if [[ "${JOBSTATUS}" == "running" ]]
        then
          echo "Rundeck job is running: $( jq -r .permalink ${APIOUT})"
        else
          echo "Rundeck job is ${JOBSTATUS}."
        
